Update 01/ 2021:

Since according to our current user naming, one user could be assigned to both b2c (not login) and b2b (login) roles, we need to retain the dataLayer with corresponding values
in every page during their visits (whenever the DOM loads).

Current setting:

Pre-login :

<script>
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  'event': 'userHomePage',
  'userId': 8796093087748,
  'userType.type1': 'b2c'
}); 
</script>


Post-login:
<script>
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  'event': 'userHomePage',
  'userId': 8796256993284,
  'userType.type1': 'b2b',
  'userType.type2': 'salesman'
}); 
</script>

We'll add one arrtibute to the post-login dataLayer to identify if the users are new or existing, by cross checking user data from Backoffice.

Post-login:
<script>
window.dataLayer = window.dataLayer || [];
window.dataLayer.push({
  'event': 'userHomePage',
  'userId': 8796256993284,
  'userType.type1': 'b2b',
  'userType.type2': 'salesman'
  'userType.type3' : 'new' // if user log in for the first time after he register an account, return 'new'. Otherwise return 'existing'
}); 
</script>

*If the user sign in and sign out multiple times after he register a new account in the same visit, from the second log in, returing 'existing'

Summary: There are two options to decide when to fire the dataLayers:

1, Only when user log in - this way we dont need to fire the dataLayer when they first land on the site, and in every page -> no b2c type recorded
2, In every page load - firing the dataLayers that record the latest user info when they load any page of the site -> b2c mean non - login nad b2b mean log-in
